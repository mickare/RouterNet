syntax = "proto3";

package de.rennschnitzel.backbone.net.protocol;

import "NetworkProtocol.proto";
import "HandshakeProtocol.proto";
import "ComponentUUID.proto";

message ErrorMessage {
	enum Type {
		UNDEFINED = 0;
		SERVER_ERROR = 1;
		PROTOCOL_ERROR = 2;
		UNAVAILABLE = 3;
		HANDSHAKE = 4;
	}
	Type type = 1;
	bool fatal = 2;
	string message = 3;
}

message CloseMessage {
	oneof reason {
		ErrorMessage error = 1;
		string normal = 2;
		bool shutdown = 3;
	}
}

message TargetMessage {
	bool all = 1;
	repeated UUID servers = 2;
	repeated string namespaces = 3;
}

message Packet {
	oneof value {
		ErrorMessage error = 1;
		CloseMessage close = 2;
		LoginMessage login = 10;
		AuthChallengeMessage authChallenge = 11;
		AuthResponseMessage authResponse = 12;
		AuthSuccessMessage authSuccess = 13;
		ConnectedMessage connected = 20;
		DisconnectedMessage disconnected = 21;
		ServerUpdateMessage update = 22;
		ContentMessage message = 30;
	}
}

message ContentMessage {
	TargetMessage target = 1;
	UUID sender = 3;
	oneof content {
		ByteContent bytes = 20;
		ObjectContent object = 21;
		ProcedureContent procedure = 30;
	}
}

message ObjectContent {
	string type = 1;
	bytes data = 2;	
}

message ByteContent {
	string key = 1;
	bytes data = 2;
}

message ProcedureContent {
	oneof content {
		ProcedureCallMessage call = 4;
		ProcedureResponseMessage response = 5;
	}
}

message ProcedureCallMessage {
	ProcedureMessage procedure = 1;
	int32 id = 2;
	int64 timestamp = 3;
	int64 maxTimeout = 4;
	oneof data {
		bytes bytes = 20;
		bytes object = 21;
	}
}

message ProcedureResponseMessage {
	ProcedureMessage procedure = 1;
	int32 id = 2;
	int64 timestamp = 3;
	bool success = 4;
	bool cancelled = 5;
	oneof data {
		ErrorMessage error = 10;
		bytes bytes = 20;
		bytes object = 21;
	}
}
